setwd("E:/Dropbox/Revision/Distributed KNN/SC_Revision/code")
options(width = 200)
n.sim = c(60000)
gamma.sim = c(0,0.3)
gamma.sim = 0:8/10
#gamma.sim=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
kappa.sim=c(0.8)
name="random2"
output = c()
result = c()
for (N in n.sim) {
for (gamma in gamma.sim) {
filename=paste(name,"/data/example_N", N, "_gamma", gamma*10, ".txt", sep = "")
if (file.exists(filename)) {
tryCatch({
df = read.table(filename, sep = " ")
result = rbind(result, df)
}, error = function(e) {
})
}
}
}
data=result
#data.frame(myhat=myhat,qiaohat=qiaohat,myk1=myk1,qiaok1=qiaok1,mytime=time2,qiaotime=time3,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#result=data.frame(dhat=dhat, myhat=myhat,qiaohat=qiaohat,nn1hat=nn1hat,dk1=dk1,myk1=myk1,qiaok1=qiaok1,dtime=time1, mytime=time2,qiaotime=time3,nn1time=time4,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
colnames(result)=c("dhat","myhat", "qiaohat","nn1hat","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
result$myhat=(result$myhat>=1/2)
result$qiaohat=(result$qiaohat>=1/2)
result$nn1hat=(result$nn1hat>=1/2)
result$bayes=(result$bayes>=1/2)
result$myhat=(result$myhat==result$bayes)
result$qiaohat=(result$qiaohat==result$bayes)
result$nn1hat=(result$nn1hat==result$bayes)
colnames(result)=c("DA","DAES", "DK","D1","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
df=result
output=c()
for (N in n.sim){
for (kappa in kappa.sim){
for (gamma in gamma.sim) {
subdf=df[which(df$N==N  & df$gamma==gamma & df$kappa==kappa),]
print(mean(subdf$myk1==max(subdf$myk1)))
re=colMeans(subdf)
re=c(re,dim(subdf)[1])
#re=c(n,p,re)
output=rbind(output,re)
}
}
}
ddf=df
print(output, digit=3)
data=data.frame(output)
library("tidyverse")
library("latex2exp")
library("egg")
df=select(ddf,dk1, myk1,gamma)
colnames(df)=c("DA","DAES","gamma")
df=gather(df,key = "Classifier", value = "k", -gamma)
df$Classifier=factor(df$Classifier, levels=c("DAES","DA"))
titlename=""
if (grepl("uniform",name)){
titlename="Equally Split"
}
if (grepl("random",name)){
titlename="Unequally Split"
}
plist=list()
i=0
for (gamma in gamma.sim){
subdf=df[which(df$gamma==gamma),]
#ps.options(horizontal = F)
#ps.options(height=3.5, width=3.5)
#postscript(paste("../figure/k_",name,"_gamma",gamma*10,".eps",sep=""))
#par(mar=c(2,4,2,2))
p1 <- ggplot(subdf, aes(x=Classifier, y=k)) +
geom_boxplot(aes(fill = Classifier),show.legend = FALSE,width=0.3)+
theme(text=element_text(size=15))+
theme(axis.text.x=element_text(size=15,face="bold"))+
theme(axis.text.y=element_text(size=15))+
theme(axis.title.x=element_text(size=20))+
ggtitle(TeX(paste(r'($\epsilon=$)',gamma)))+
#  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.1)+
#geom_jitter(shape=16, position=position_jitter(0.1))+
# ggtitle(titlename)+
theme(plot.title = element_text(hjust = 0.5))+
#xlab(TeX(paste(r'($\epsilon=$)',gamma)))+
xlab("")+
ylab("")
print(p1)
i=i+1
plist[[i]]=p1
#dev.off()
print(p1)
}
ps.options(horizontal = F)
ps.options(height=9, width=10)
postscript(paste("../figure/k_",name,".eps",sep=""))
par(mar=c(2,4,2,2))
p=ggarrange(plist[[1]],plist[[2]],plist[[3]],plist[[4]],plist[[5]],plist[[6]],plist[[7]],plist[[8]],plist[[9]], ncol=3)
print(p)
dev.off()
rm(list = ls())
set.seed(1)
setwd("E:/Dropbox/Revision/Distributed KNN/SC_Revision/code")
options(width = 200)
n.sim = c(60000)
gamma.sim = c(0,0.3)
gamma.sim = 0:8/10
#gamma.sim=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
kappa.sim=c(0.8)
name="uniform"
output = c()
result = c()
for (N in n.sim) {
for (gamma in gamma.sim) {
filename=paste(name,"/data/example_N", N, "_gamma", gamma*10, ".txt", sep = "")
if (file.exists(filename)) {
tryCatch({
df = read.table(filename, sep = " ")
result = rbind(result, df)
}, error = function(e) {
})
}
}
}
data=result
#data.frame(myhat=myhat,qiaohat=qiaohat,myk1=myk1,qiaok1=qiaok1,mytime=time2,qiaotime=time3,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#result=data.frame(dhat=dhat, myhat=myhat,qiaohat=qiaohat,nn1hat=nn1hat,dk1=dk1,myk1=myk1,qiaok1=qiaok1,dtime=time1, mytime=time2,qiaotime=time3,nn1time=time4,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
colnames(result)=c("dhat","myhat", "qiaohat","nn1hat","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
result$myhat=(result$myhat>=1/2)
result$qiaohat=(result$qiaohat>=1/2)
result$nn1hat=(result$nn1hat>=1/2)
result$bayes=(result$bayes>=1/2)
result$myhat=(result$myhat==result$bayes)
result$qiaohat=(result$qiaohat==result$bayes)
result$nn1hat=(result$nn1hat==result$bayes)
colnames(result)=c("DA","DAES", "DK","D1","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
df=result
output=c()
for (N in n.sim){
for (kappa in kappa.sim){
for (gamma in gamma.sim) {
subdf=df[which(df$N==N  & df$gamma==gamma & df$kappa==kappa),]
print(mean(subdf$myk1==max(subdf$myk1)))
re=colMeans(subdf)
re=c(re,dim(subdf)[1])
#re=c(n,p,re)
output=rbind(output,re)
}
}
}
ddf=df
print(output, digit=3)
data=data.frame(output)
library("tidyverse")
library("latex2exp")
library("egg")
df=select(ddf,dk1, myk1,gamma)
colnames(df)=c("DA","DAES","gamma")
df=gather(df,key = "Classifier", value = "k", -gamma)
df$Classifier=factor(df$Classifier, levels=c("DAES","DA"))
titlename=""
if (grepl("uniform",name)){
titlename="Equally Split"
}
if (grepl("random",name)){
titlename="Unequally Split"
}
plist=list()
i=0
for (gamma in gamma.sim){
subdf=df[which(df$gamma==gamma),]
#ps.options(horizontal = F)
#ps.options(height=3.5, width=3.5)
#postscript(paste("../figure/k_",name,"_gamma",gamma*10,".eps",sep=""))
#par(mar=c(2,4,2,2))
p1 <- ggplot(subdf, aes(x=Classifier, y=k)) +
geom_boxplot(aes(fill = Classifier),show.legend = FALSE,width=0.3)+
theme(text=element_text(size=15))+
theme(axis.text.x=element_text(size=15,face="bold"))+
theme(axis.text.y=element_text(size=15))+
theme(axis.title.x=element_text(size=20))+
ggtitle(TeX(paste(r'($\epsilon=$)',gamma)))+
#  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.1)+
#geom_jitter(shape=16, position=position_jitter(0.1))+
# ggtitle(titlename)+
theme(plot.title = element_text(hjust = 0.5))+
#xlab(TeX(paste(r'($\epsilon=$)',gamma)))+
xlab("")+
ylab("")
print(p1)
i=i+1
plist[[i]]=p1
#dev.off()
print(p1)
}
ps.options(horizontal = F)
ps.options(height=9, width=10)
postscript(paste("../figure/k_",name,".eps",sep=""))
par(mar=c(2,4,2,2))
p=ggarrange(plist[[1]],plist[[2]],plist[[3]],plist[[4]],plist[[5]],plist[[6]],plist[[7]],plist[[8]],plist[[9]], ncol=3)
print(p)
dev.off()
rm(list = ls())
set.seed(1)
setwd("E:/Dropbox/Revision/Distributed KNN/SC_Revision/code")
options(width = 200)
n.sim = c(60000)
gamma.sim = c(0,0.3)
gamma.sim = 0:8/10
#gamma.sim=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
kappa.sim=c(0.8)
name="uniform2"
output = c()
result = c()
for (N in n.sim) {
for (gamma in gamma.sim) {
filename=paste(name,"/data/example_N", N, "_gamma", gamma*10, ".txt", sep = "")
if (file.exists(filename)) {
tryCatch({
df = read.table(filename, sep = " ")
result = rbind(result, df)
}, error = function(e) {
})
}
}
}
data=result
#data.frame(myhat=myhat,qiaohat=qiaohat,myk1=myk1,qiaok1=qiaok1,mytime=time2,qiaotime=time3,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#result=data.frame(dhat=dhat, myhat=myhat,qiaohat=qiaohat,nn1hat=nn1hat,dk1=dk1,myk1=myk1,qiaok1=qiaok1,dtime=time1, mytime=time2,qiaotime=time3,nn1time=time4,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
colnames(result)=c("dhat","myhat", "qiaohat","nn1hat","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
result$myhat=(result$myhat>=1/2)
result$qiaohat=(result$qiaohat>=1/2)
result$nn1hat=(result$nn1hat>=1/2)
result$bayes=(result$bayes>=1/2)
result$myhat=(result$myhat==result$bayes)
result$qiaohat=(result$qiaohat==result$bayes)
result$nn1hat=(result$nn1hat==result$bayes)
colnames(result)=c("DA","DAES", "DK","D1","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
df=result
output=c()
for (N in n.sim){
for (kappa in kappa.sim){
for (gamma in gamma.sim) {
subdf=df[which(df$N==N  & df$gamma==gamma & df$kappa==kappa),]
print(mean(subdf$myk1==max(subdf$myk1)))
re=colMeans(subdf)
re=c(re,dim(subdf)[1])
#re=c(n,p,re)
output=rbind(output,re)
}
}
}
ddf=df
print(output, digit=3)
data=data.frame(output)
library("tidyverse")
library("latex2exp")
library("egg")
df=select(ddf,dk1, myk1,gamma)
colnames(df)=c("DA","DAES","gamma")
df=gather(df,key = "Classifier", value = "k", -gamma)
df$Classifier=factor(df$Classifier, levels=c("DAES","DA"))
titlename=""
if (grepl("uniform",name)){
titlename="Equally Split"
}
if (grepl("random",name)){
titlename="Unequally Split"
}
plist=list()
i=0
for (gamma in gamma.sim){
subdf=df[which(df$gamma==gamma),]
#ps.options(horizontal = F)
#ps.options(height=3.5, width=3.5)
#postscript(paste("../figure/k_",name,"_gamma",gamma*10,".eps",sep=""))
#par(mar=c(2,4,2,2))
p1 <- ggplot(subdf, aes(x=Classifier, y=k)) +
geom_boxplot(aes(fill = Classifier),show.legend = FALSE,width=0.3)+
theme(text=element_text(size=15))+
theme(axis.text.x=element_text(size=15,face="bold"))+
theme(axis.text.y=element_text(size=15))+
theme(axis.title.x=element_text(size=20))+
ggtitle(TeX(paste(r'($\epsilon=$)',gamma)))+
#  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.1)+
#geom_jitter(shape=16, position=position_jitter(0.1))+
# ggtitle(titlename)+
theme(plot.title = element_text(hjust = 0.5))+
#xlab(TeX(paste(r'($\epsilon=$)',gamma)))+
xlab("")+
ylab("")
print(p1)
i=i+1
plist[[i]]=p1
#dev.off()
print(p1)
}
ps.options(horizontal = F)
ps.options(height=9, width=10)
postscript(paste("../figure/k_",name,".eps",sep=""))
par(mar=c(2,4,2,2))
p=ggarrange(plist[[1]],plist[[2]],plist[[3]],plist[[4]],plist[[5]],plist[[6]],plist[[7]],plist[[8]],plist[[9]], ncol=3)
print(p)
dev.off()
rm(list = ls())
set.seed(1)
setwd("E:/Dropbox/Revision/Distributed KNN/SC_Revision/code")
options(width = 200)
n.sim = c(60000)
gamma.sim = c(0,0.3)
gamma.sim = 0:8/10
#gamma.sim=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
kappa.sim=c(0.8)
name="random"
output = c()
result = c()
for (N in n.sim) {
for (gamma in gamma.sim) {
filename=paste(name,"/data/example_N", N, "_gamma", gamma*10, ".txt", sep = "")
if (file.exists(filename)) {
tryCatch({
df = read.table(filename, sep = " ")
result = rbind(result, df)
}, error = function(e) {
})
}
}
}
data=result
#data.frame(myhat=myhat,qiaohat=qiaohat,myk1=myk1,qiaok1=qiaok1,mytime=time2,qiaotime=time3,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#result=data.frame(dhat=dhat, myhat=myhat,qiaohat=qiaohat,nn1hat=nn1hat,dk1=dk1,myk1=myk1,qiaok1=qiaok1,dtime=time1, mytime=time2,qiaotime=time3,nn1time=time4,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
colnames(result)=c("dhat","myhat", "qiaohat","nn1hat","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
result$myhat=(result$myhat>=1/2)
result$qiaohat=(result$qiaohat>=1/2)
result$nn1hat=(result$nn1hat>=1/2)
result$bayes=(result$bayes>=1/2)
result$myhat=(result$myhat==result$bayes)
result$qiaohat=(result$qiaohat==result$bayes)
result$nn1hat=(result$nn1hat==result$bayes)
colnames(result)=c("DA","DAES", "DK","D1","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
df=result
output=c()
for (N in n.sim){
for (kappa in kappa.sim){
for (gamma in gamma.sim) {
subdf=df[which(df$N==N  & df$gamma==gamma & df$kappa==kappa),]
print(mean(subdf$myk1==max(subdf$myk1)))
re=colMeans(subdf)
re=c(re,dim(subdf)[1])
#re=c(n,p,re)
output=rbind(output,re)
}
}
}
ddf=df
print(output, digit=3)
data=data.frame(output)
library("tidyverse")
library("latex2exp")
library("egg")
df=select(ddf,dk1, myk1,gamma)
colnames(df)=c("DA","DAES","gamma")
df=gather(df,key = "Classifier", value = "k", -gamma)
df$Classifier=factor(df$Classifier, levels=c("DAES","DA"))
titlename=""
if (grepl("uniform",name)){
titlename="Equally Split"
}
if (grepl("random",name)){
titlename="Unequally Split"
}
plist=list()
i=0
for (gamma in gamma.sim){
subdf=df[which(df$gamma==gamma),]
#ps.options(horizontal = F)
#ps.options(height=3.5, width=3.5)
#postscript(paste("../figure/k_",name,"_gamma",gamma*10,".eps",sep=""))
#par(mar=c(2,4,2,2))
p1 <- ggplot(subdf, aes(x=Classifier, y=k)) +
geom_boxplot(aes(fill = Classifier),show.legend = FALSE,width=0.3)+
theme(text=element_text(size=15))+
theme(axis.text.x=element_text(size=15,face="bold"))+
theme(axis.text.y=element_text(size=15))+
theme(axis.title.x=element_text(size=20))+
ggtitle(TeX(paste(r'($\epsilon=$)',gamma)))+
#  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.1)+
#geom_jitter(shape=16, position=position_jitter(0.1))+
# ggtitle(titlename)+
theme(plot.title = element_text(hjust = 0.5))+
#xlab(TeX(paste(r'($\epsilon=$)',gamma)))+
xlab("")+
ylab("")
print(p1)
i=i+1
plist[[i]]=p1
#dev.off()
print(p1)
}
ps.options(horizontal = F)
ps.options(height=9, width=10)
postscript(paste("../figure/k_",name,".eps",sep=""))
par(mar=c(2,4,2,2))
p=ggarrange(plist[[1]],plist[[2]],plist[[3]],plist[[4]],plist[[5]],plist[[6]],plist[[7]],plist[[8]],plist[[9]], ncol=3)
print(p)
dev.off()
rm(list = ls())
setwd("E:/Dropbox/Revision/Distributed KNN/SC_Revision/code")
options(width = 200)
n.sim = c(60000)
gamma.sim = c(0,0.3)
gamma.sim = 0:8/10
#gamma.sim=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
kappa.sim=c(0.8)
name="uniform"
output = c()
result = c()
filename=paste("adult_result_",name,".csv",sep="")
data=read.csv(filename)
data=data[,-1]
#data.frame(myhat=myhat,qiaohat=qiaohat,myk1=myk1,qiaok1=qiaok1,mytime=time2,qiaotime=time3,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#result=data.frame(dhat=dhat, myhat=myhat,qiaohat=qiaohat,nn1hat=nn1hat,dk1=dk1,myk1=myk1,qiaok1=qiaok1,dtime=time1, mytime=time2,qiaotime=time3,nn1time=time4,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#colnames(result)=c("DA","DAES", "DK","D1","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
df=data
library("tidyverse")
library("latex2exp")
df=select(data,dhat1, dhat2, dhat3, dhat4,gamma)
df=df[1:9,]
colnames(df)=c("DA","DAES","DK","D1","gamma")
df=gather(df,key = "Classifier", value = "Risk", -gamma)
head(df)
df$Classifier=factor(df$Classifier, levels=c("DAES","DA","DK","D1"))
titlename=""
if (grepl("uniform",name)){
titlename="Equally Split"
}
if (grepl("random",name)){
titlename="Unequally Split"
}
ps.options(horizontal = F)
ps.options(height=3.5, width=4.5)
postscript(paste("../figure/adult_risk_",name,".eps",sep=""))
par(mar=c(2,4,2,2))
p1=ggplot(data = df, mapping = aes(x = gamma, y = Risk, group = Classifier, color=Classifier, pch=Classifier)) +
geom_line()+
geom_point(size = 3)+
xlab(TeX(r'($\epsilon$)'))+
ylab("")+
theme(text=element_text(size=15))+
theme(axis.title.x=element_text(size=20))+
theme(plot.title = element_text(size=13))+
ggtitle(titlename)+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.title=element_blank())
#scale_x_continuous(labels = paste0(xlab, "k"),
#                   breaks = 10^3 * xlab)
print(p1)
dev.off()
print(p1)
rm(list = ls())
setwd("E:/Dropbox/Revision/Distributed KNN/SC_Revision/code")
options(width = 200)
n.sim = c(60000)
gamma.sim = c(0,0.3)
gamma.sim = 0:8/10
#gamma.sim=c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8)
kappa.sim=c(0.8)
name="random"
output = c()
result = c()
filename=paste("adult_result_",name,".csv",sep="")
data=read.csv(filename)
data=data[,-1]
#data.frame(myhat=myhat,qiaohat=qiaohat,myk1=myk1,qiaok1=qiaok1,mytime=time2,qiaotime=time3,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#result=data.frame(dhat=dhat, myhat=myhat,qiaohat=qiaohat,nn1hat=nn1hat,dk1=dk1,myk1=myk1,qiaok1=qiaok1,dtime=time1, mytime=time2,qiaotime=time3,nn1time=time4,N=N,n1=n1,bayes=bayes,newy=newy, kappa=kappa, gamma=gamma)
#colnames(result)=c("DA","DAES", "DK","D1","dk1","myk1", "qiaok1","dtime", "mytime", "qiaotime","nn1time", "N", "n1", "bayes", "newy", "kappa", "gamma")
df=data
library("tidyverse")
library("latex2exp")
df=select(data,dhat1, dhat2, dhat3, dhat4,gamma)
df=df[1:9,]
colnames(df)=c("DA","DAES","DK","D1","gamma")
df=gather(df,key = "Classifier", value = "Risk", -gamma)
head(df)
df$Classifier=factor(df$Classifier, levels=c("DAES","DA","DK","D1"))
titlename=""
if (grepl("uniform",name)){
titlename="Equally Split"
}
if (grepl("random",name)){
titlename="Unequally Split"
}
ps.options(horizontal = F)
ps.options(height=3.5, width=4.5)
postscript(paste("../figure/adult_risk_",name,".eps",sep=""))
par(mar=c(2,4,2,2))
p1=ggplot(data = df, mapping = aes(x = gamma, y = Risk, group = Classifier, color=Classifier, pch=Classifier)) +
geom_line()+
geom_point(size = 3)+
xlab(TeX(r'($\epsilon$)'))+
ylab("")+
theme(text=element_text(size=15))+
theme(axis.title.x=element_text(size=20))+
theme(plot.title = element_text(size=13))+
ggtitle(titlename)+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.title=element_blank())
#scale_x_continuous(labels = paste0(xlab, "k"),
#                   breaks = 10^3 * xlab)
print(p1)
dev.off()
print(p1)
